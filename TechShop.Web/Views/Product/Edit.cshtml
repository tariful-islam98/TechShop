@model EditProductViewModel
@{
	ViewBag.Title = "Edit";

	var imageUrl = !string.IsNullOrEmpty(Model.ImageUrl) ? Model.ImageUrl : "/Content/images/system/placeholder-image.png";
}

<h2>Edit Product</h2>

<form id="editProduct">
	<input type="hidden" name="ID" value="@Model.ID" />
	<div class="row">
		<div class="col-md-8">
			<div class="form-group">
				<label>Category</label>
				<select class="form-control" name="CategoryID">
					@foreach (var category in Model.AvailableCategories)
					{
						var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
						<option value="@category.ID" @selected>@category.Name</option>
					}
				</select>
			</div>
			<div class="form-group">
				<label>Name</label>
				<input class="form-control" name="Name" value="@Model.Name" />
			</div>
			<div class="form-group">
				<label>Description</label>
				<input class="form-control" name="Description" value="@Model.Description" />
			</div>
			<div class="form-group">
				<label>Price</label>
				<input class="form-control" name="Price" value="@Model.Price" />
			</div>
			<div class="form-group">
				<label>Quantity</label>
				<input class="form-control" name="Quantity" value="@Model.Quantity" />
			</div>
			<div class="form-group">
				<label>Image</label>
				<input type="hidden" id="ImageUrl" name="ImageUrl" />
				<input class="form-control" id="imageUpload" name="Image" type="file" accept=".png, .jpg" />
			</div>

			<button id="updateBtn" type="button" class="btn btn-primary">Update</button>
			<button id="cancelBtn" type="button" class="btn btn-primary">Cancel</button>
		</div>
		<div class="col-md-4">
			<div class="thumb">
				<img class="img-thumbnail img-fluid" id="productImage" src="@imageUrl" />
			</div>
		</div>
	</div>
</form>

@*<script src="~/Content/plugins/jquery/jquery.min.js"></script>*@
<!-- Bootstrap 4 -->
@*<script src="~/Content/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>*@

<script>
	$('#editProduct').validate({
		rules: {
			Name: {
				required: true,
				minlength: 5,
				maxlength: 50,
			},
			Description: {
				maxlength: 500
			},
			Price: {
				range: [1, 100000]
			}
		},
		messages: {
			Name: {
				required: 'Name is required',
				minlength: 'Minimum Length is 5',
				maxlength: 'Maximum Length is 50'
			},
			Description: {
				maxlength: 'Maximum Length is 500'
			},
			Price: {
				range: 'Price must be within range of 1 - 100000.'
			}
		}
	});

	$("#imageUpload").change(function () {
		var element = this;

		var formData = new FormData();

		var totalFiles = element.files.length;

		for (var i = 0; i < totalFiles; i++) {
			var file = element.files[i];
			formData.append("Photo", file);
		}

		$.ajax({
			type: 'POST',
			url: '@Url.Action("UploadImage", "Shared")',
			dataType: 'json',
			data: formData,
			contentType: false,
			processData: false
		})
        .done(function (response) {
        	console.log(response);

        	if (response.Success) {
        		$("#ImageUrl").val(response.ImageUrl);
        		$("#productImage").attr("src", response.ImageUrl);
        	}
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$("#updateBtn").click(function () {
		if ($("#editProduct").valid()) {
			$.ajax({
				type: 'POST',
				url: '@Url.Action("Edit", "Product")',
				data: $("#editProduct").serialize()
			})
			.done(function (response) {
				$("#tableContiner").html(response);
				$("#actionContainer").html("");
				focusAction("tableContiner");
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("FAIL");
			});
		}
		else {
			swal({
				title: "Warning",
				text: "Please enter all valid data in fields.",
				icon: "warning",
				buttons: true,
				dangerMode: true,
			});
		}
	});

	$("#cancelBtn").click(function () {
		$("#actionContainer").html("");
		focusAction("tableContiner");
	});
</script>