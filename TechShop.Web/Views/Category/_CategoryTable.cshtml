@model TechShop.Web.ViewModels.CategorySearchViewModel


<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>

<br />

<div>
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-table mr-1"></i>
            Categories
            <button class="btn btn-primary" type="button" id="newBtn" style="float:right;"> Add New Category</button>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="categoryTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th class="font-weight-bold">Category Name</th>
                            <th class="font-weight-bold">Products</th>
                            <th class="font-weight-bold wrap-td">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Categories != null && Model.Categories.Count > 0)
                        {
                            foreach (var category in Model.Categories)
                            {
                                <tr>
                                    <td>@category.Name</td>
                                    <td>
                                        @category.Products.Count
                                    </td>
                                    <td class="wrap-td">
                                        <button class="editBtn" data-id="@category.ID">Edit</button>
                                        <button class="deleteBtn" data-id="@category.ID">Delete</button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr><td colspan="3" class="text-danger">No Categories found.</td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @*<div>
            @if (Model.Pager != null && Model.Pager.TotalPages > 1)
            {

                if (Model.Pager.CurrentPage > 1)
                {
                    <button class="pageButtons" data-pageno="1">First</button>
                    <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage - 1)">Previous</button>
                }

                for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                    <button class="@activeClass pageButtons" data-pageno="@page">@page</button>
                }

                if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <button class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)">Next</button>
                    <button class="pageButtons" data-pageno="@Model.Pager.EndPage">Last</button>
                }
            }
        </div>*@
</div>


<script>
    //$(document).ready(function () {
    //    $('#categoryTable').DataTable();
    //});

	@*$(".pageButtons").click(function () {
		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',
			data: {
				pageNo: $(this).attr("data-pageNo"),
				search: '@Model.SearchTerm'
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});*@

    @*$("#searchBtn").click(function () {
		var searchValue = $("#searchTxt").val();

		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$("#resetBtn").click(function () {
		var searchValue = '';

		$.ajax({
			url: '@Url.Action("CategoryTable", "Category")',//'/Category/CategoryTable',
			data: {
				search: searchValue
			}
		})
        .done(function (response) {
        	$("#tableContiner").html(response);
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});*@
    
  $(function () {
    $("#categoryTable").DataTable({
      "responsive": true, "lengthChange": true, "autoWidth": false,
      "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
    }).buttons().container().appendTo('#categoryTable_wrapper .col-md-6:eq(0)');	  
  });

	$("#newBtn").click(function () {
		$.ajax({
			url: '@Url.Action("Create", "Category")',//'/Category/Create',
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$(".editBtn").click(function () {
		$.ajax({
			url: '@Url.Action("Edit", "Category")',
			data: {
				ID: $(this).attr('data-id')
			}
		})
        .done(function (response) {
        	$("#actionContainer").html(response);

        	focusAction("actionContainer");
        })
        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
        	alert("FAIL");
        });
	});

	$(".deleteBtn").click(function () {

		var confirmDelete = confirm("Are you sure you want to delete this category?");

		if (confirmDelete)
		{
			$.ajax({
				type: 'POST',
				url: '@Url.Action("Delete", "Category")',
				data: {
					ID: $(this).attr('data-id')
				}
			})
			.done(function (response) {
				$("#tableContiner").html(response);
			})
			.fail(function (XMLHttpRequest, textStatus, errorThrown) {
				alert("FAIL");
			});
		}
	});

</script>
