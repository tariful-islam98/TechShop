@model FilterProductsViewModel

@{

    var defaultImageUrl = "/Content/images/system/placeholder-image.png";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/2.1.0/sweetalert.min.js"></script>


<div class="filter-shop clearfix">
    <p class="showing-product float-right">
        Showing @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + 1) – @(((Model.Pager.CurrentPage - 1) * Model.Pager.PageSize) + (Model.Products.Count < Model.Pager.PageSize ? Model.Products.Count : Model.Pager.PageSize)) of @Model.Pager.TotalItems Products
    </p>
</div><!-- /.filte-shop -->
<div class="product-content product-threecolumn product-slidebar clearfix">
    <ul class="product style2 sd1">
        @foreach (var product in Model.Products)
        {
            var imageUrl = string.IsNullOrEmpty(product.ImageUrl) ? defaultImageUrl : product.ImageUrl;
            var quantity = product.Quantity > 0 ? "Available" : "Out of Stock";
            <li class="product-item">
                <div class="product-thumb clearfix">
                    <a href="@Url.Action("Details", "Product", new { ID = product.ID })" class="product-thumb">
                        <img src="@imageUrl" alt="image">
                    </a>
                </div>
                <div class="product-info clearfix">
                    <span class="product-title"><a href="@Url.Action("Details", "Product", new { ID = product.ID })">@product.Name</a></span>
                    <div class="price">
                        <ins>
                            <span class="amount">BDT @product.Price</span>
                        </ins>
                    </div>
                    <div class="product-quantity width-14">
                        <span class=@(quantity.Equals("Available") ? "text-info" : "text-danger") style="font-weight: bold;">@quantity</span>
                    </div>
                </div>
                @if (product.Quantity > 0)
                {
                    <div class="add-to-cart text-center">
                        <a class="productAddToCart" data-id="@product.ID">ADD TO CART</a>
                    </div>
                }
                <a href="#" class="like"><i class="fa fa-heart-o"></i></a>
            </li>
        }
    </ul><!-- /.product -->
</div><!-- /.product-content -->

@if (Model.Pager != null && Model.Pager.TotalPages > 1)
{
    <div class="product-pagination text-center clearfix">
        <ul class="flat-pagination">
            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="prev">
                    <a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage - 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink"><i class="fa fa-angle-left"></i></a>
                </li>
            }

            @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
            {
                string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : string.Empty;

                <li class="@activeClass"><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = page, sortBy = Model.SortBy, categoryID = Model.CategoryID })" title="" class="pageDataLink">@page</a></li>
            }

            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li><a data-href="@Url.Action("FilterProducts", "Shop", new { pageNo = Model.Pager.CurrentPage + 1, sortBy = Model.SortBy, categoryID = Model.CategoryID })" class="pageDataLink"><i class="fa fa-angle-right"></i></a></li>
            }
        </ul><!-- /.flat-pagination -->
    </div>
}


<input type="hidden" id="SearchTerm" value="@Model.SearchTerm" />
<input type="hidden" id="SortBy" value="@Model.SortBy" />
<input type="hidden" id="CategoryID" value="@Model.CategoryID" />

<script>
    $(".pageDataLink").click(function () {
        var url = $(this).attr("data-href");

        if (url != "" || url != undefined) {
            GetData(url);
        }
    });


    var products;
    $(".productAddToCart").click(function () {
        var existingCookieData = $.cookie('CartProducts');

        if (existingCookieData != undefined && existingCookieData != "" && existingCookieData != null) {
            products = existingCookieData.split('-');
        }
        else {
            products = [];
        }

        var productID = $(this).attr('data-id');

        var date = new Date();
        var minutes = 30;
        date.setTime(date.getTime() + (minutes * 60 * 1000));

        products.push(productID);

        $.cookie('CartProducts', products.join('-'), { expires: date, path: '/' });

        updateCartProducts();

        swal("Done", "Product Added to Cart!", "success").then((value) => {
                                window.location = '@Url.Action("Checkout", "Shop")';
                            });
    });
</script>
